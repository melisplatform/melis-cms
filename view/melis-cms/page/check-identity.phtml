
 
	<?php 
		if ($this->locale != 'en_EN')
			$locale = $this->locale;
		else 
			$locale = 'en';
	?>

	var locale = '<?= $locale; ?>';
	
	var miniTemplates = [];
	
	$.ajax({
		type        : 'GET', 
	    url         : '/melis/MelisCms/PageEdition/getTinyTemplates?idPage=<?= $this->idPage; ?>',
	    dataType    : 'json',
	    encode		: true
	}).success(function(data){
	
		if (data.success)
			miniTemplates = data.templates;
		else
			miniTemplates = [];
	
		<?php 
		
			foreach ($this->configsTiny as $config)
			{
				require_once($config);	
				echo "\n";	
			}
	
		?>
	});
	
	
	
	//run this function when you click out of the tinymce
	$("body").on("blur", ".melis-editable", function(){

			// get all data-attributes from the clicked
			var currentdata = $(this).data();

			//get the content of the active tinyMCE editor.
			var content = tinyMCE.activeEditor.getContent({format : 'html'});
        	

        	var data = {
				tagId : currentdata.tagId,
				tagValue : content,
            };
			
		

    		$.post("/melis/MelisCms/PageEdition/savePageTagSession?idPage="+currentdata.idPage,
    	    		data,
    	    		function(data, status){
    	    });
	});
	
	
		
	// OPENING THE POPUP
	$("body").on("click", ".mce-btn", function(){
		
		var mcePopUp = $("#mce-modal-block").length;
		if(mcePopUp){

			// iframe height
			var iframeHeight = $(window).height();
				
			// dialog box height
			var dialogHeight = $(".mce-window").outerHeight();
			
			parent.scrollToViewTinyMCE(dialogHeight, iframeHeight);
			
			// CLOSING THE POPUP
			var timeOut = setInterval(function(){ 
			
				// console.log( "return =" + parent.scrollOffsetTinyMCE() );
				if( !$(".mce-window").is(":visible") ){
				// window.parent.scrollTo( 0,parent.scrollOffsetTinyMCE())
					window.parent.$("body").animate({scrollTop: parent.scrollOffsetTinyMCE() }, 200);
					
					clearTimeout(timeOut);
				}
			}, 300);
			
		}
		else{
			console.log("no popup");
		}
		
	});
	

